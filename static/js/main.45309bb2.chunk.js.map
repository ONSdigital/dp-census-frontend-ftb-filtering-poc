{"version":3,"sources":["assets/Census2021_whiteback.png","logo.svg","Header.js","Content.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","alt","censusLogo","React","Component","Content","ftbDomain","state","results","handleSubmit","e","a","preventDefault","submitForm","submitSuccess","setState","searchString","this","getDatasets","input","requestOptions","method","fetch","response","json","data","displayList","length","map","singleResult","href","name","description","Footer","width","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45309bb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Census2021_whiteback.3edebd2f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport censusLogo from './assets/Census2021_whiteback.png'\nimport './App.css';\n\n\nexport class Header extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <header>\n            <div className=\"wrapper\">\n                <div className=\"header col-wrap\">\n                    <div className=\"col\">\n                        <img className=\"logo top-logo\"\n                             src=\"https://cdn.ons.gov.uk/assets/images/ons-logo/v2/ons-logo.svg\"\n                             alt=\"Office for National Statistics\"/>\n                        <img className=\"logo top-logo\" src={censusLogo}\n                             alt=\"Census 2021 logo\"/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"primary-nav print--hide page-title font-size--sm\">\n            </div>\n        </header>\n    }\n}\n","import React, {FormEvent} from 'react';\n\nimport './App.css';\n\nexport class Content extends React.Component {\n    // ONS instance\n    //ftbDomain = \"http://99.80.12.125:10100/v6\";\n    // Sensible code instance\n    ftbDomain = \"http://99.80.12.125:10100/v6\";\n\n    state = {\n        results: []\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchString: '',\n            results: []\n        };\n    }\n\n    componentDidMount() {\n        this.getDatasets();\n    }\n\n    setSearchInput(input) {\n        this.setState({searchString: input});\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const submitSuccess = await this.submitForm();\n        this.setState({submitSuccess});\n    };\n\n    async getDatasets() {\n        // Actual request\n        const requestOptions = {\n            method: 'GET'\n        };\n        let data;\n        try {\n            const response = await fetch(this.ftbDomain + \"/datasets\", requestOptions);\n            // Actual Response\n            data = await response.json();\n        } catch {\n            // Fake response\n            data = [\n                {\n                    \"name\": \"Example\",\n                    \"digest\": \"24aca09d162196ce64c5801321fb31e8eab8670dae0a4a2859f560e979bcc556\",\n                    \"description\": \"Example dataset for validation\",\n                    \"size\": 7,\n                    \"ruleRootVariable\": \"city\"\n                }, {\n                    \"name\": \"Example\",\n                    \"digest\": \"24aca09d162196ce64c5801321fb31e8eab8670dae0a4a2859f560e979bcc556\",\n                    \"description\": \"Example dataset for validation\",\n                    \"size\": 7,\n                    \"ruleRootVariable\": \"city\"\n                }, {\n                    \"name\": \"Example\",\n                    \"digest\": \"24aca09d162196ce64c5801321fb31e8eab8670dae0a4a2859f560e979bcc556\",\n                    \"description\": \"Example dataset for validation\",\n                    \"size\": 7,\n                    \"ruleRootVariable\": \"city\"\n                }, {\n                    \"name\": \"Example\",\n                    \"digest\": \"24aca09d162196ce64c5801321fb31e8eab8670dae0a4a2859f560e979bcc556\",\n                    \"description\": \"Example dataset for validation\",\n                    \"size\": 7,\n                    \"ruleRootVariable\": \"city\"\n                }, {\n                    \"name\": \"Example\",\n                    \"digest\": \"24aca09d162196ce64c5801321fb31e8eab8670dae0a4a2859f560e979bcc556\",\n                    \"description\": \"Example dataset for validation\",\n                    \"size\": 7,\n                    \"ruleRootVariable\": \"city\"\n                }, {\n                    \"name\": \"Example\",\n                    \"digest\": \"24aca09d162196ce64c5801321fb31e8eab8670dae0a4a2859f560e979bcc556\",\n                    \"description\": \"Example dataset for validation\",\n                    \"size\": 7,\n                    \"ruleRootVariable\": \"city\"\n                } , {\n                    \"name\": \"Example\",\n                    \"digest\": \"24aca09d162196ce64c5801321fb31e8eab8670dae0a4a2859f560e979bcc556\",\n                    \"description\": \"Example dataset for validation\",\n                    \"size\": 7,\n                    \"ruleRootVariable\": \"city\"\n                }\n            ];\n        }\n\n        this.setState(({results: data}));\n\n        return true;\n    }\n\n    render() {\n        //results = this.state.results\n\n        //For each element in results\n        // create a new component that lists the name of the result and the description\n        let displayList;\n        if (this.state.results.length > 0) {\n            displayList = this.state.results.map(function (singleResult) {\n                return <li className=\"col col--md-34 col--lg-50 search-results__item search-result-item\"><a\n                    href={singleResult.name}>{singleResult.name}</a>\n                    <p className=\"search-results__meta\">{singleResult.description}</p></li>;\n            });\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"search-results\">\n                    <ul className=\"list--neutral flush\">{displayList}</ul>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nexport class Footer extends React.Component {\n\n    render() {\n        return <footer className=\"footer\">\n            <img className=\"footer-license__img\" alt=\"OGL\"\n                 src=\"https://cdn.ons.gov.uk/assets/images/logo-ogl-footer.svg\"\n                 width=\"60\"></img>\n            <p className=\"footer-license__text margin-left-sm--0\">\n                All content is available under the <a className=\"icon--hide\"\n                                                      href=\"http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n                                                      target=\"_blank\"\n                                                      rel=\"noopener noreferrer\">Open Government Licence v3.0</a> <span\n                className=\"icon icon-external--light-small\"></span>, except where otherwise stated\n            </p>\n        </footer>\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Header} from \"./Header\";\nimport {Content} from \"./Content\";\nimport {Footer} from \"./Footer\";\n\nfunction App() {\n  return (\n    <div>\n        <Header/>\n        <Content/>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}