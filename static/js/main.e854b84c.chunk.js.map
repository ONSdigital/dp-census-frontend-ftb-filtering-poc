{"version":3,"sources":["assets/Census2021_whiteback.png","Header.js","Footer.js","DatasetDim.js","DatasetFilterOptionMenu.js","DimensionOptSelector.js","Dataset.js","Content.js","DatasetList.js","Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","alt","censusLogo","React","Component","Footer","width","href","target","rel","DatasetDim","filterSelection","this","props","length","join","id","onClick","dimClicked","label","DatasetFilterOptionMenu","applyFilters","bind","navTo","document","location","origin","datasetName","getFilterQuery","window","showDim","previewDownloadClass","canFilter","dimensions","method","action","type","value","name","DimensionOptSelector","saveSelection","state","filters","prevProps","prevState","snapshot","dimCodeBook","setState","code","e","toString","checked","filterUpdate","closeDimensionOptMenu","i","push","codes","onChange","checkChanged","htmlFor","labels","aria-label","aria-controls","WarningBanner","warn","Dataset","dimensionClickedFuncs","ftbDomain","getFilterSelection","filterUpdateFunc","filter","ruleRootVariable","filterQueryPart1","filterQueryPart2","dim","replace","dimOptString","dimOpt","console","log","newFilter","filterObj","Object","assign","indexAddingDimOpt","match","params","getCodeBook","requestOptions","Authorization","process","REACT_APP_NOT_SECRET_CODE","connected","fetch","response","json","demoResponse","status","MockCodeBook","codebook","codeBook","warning","dataset","index","filterName","indexOfCode","indexOf","dimOptSelector","singleDim","filtersSelected","Content","getDatasets","data","MockDatasets","results","displayList","map","singleResult","description","DatasetList","Results","getFilterResults","headers","search","MockFilterResult","JSON","stringify","App","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e854b84c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Census2021_whiteback.3edebd2f.png\";","import React from 'react';\nimport censusLogo from './assets/Census2021_whiteback.png'\nimport './App.css';\n\n\nexport class Header extends React.Component {\n    render() {\n        return <header>\n            <div className=\"wrapper\">\n                <div className=\"header col-wrap\">\n                    <div className=\"col\">\n                        <img className=\"logo top-logo\"\n                             src=\"https://cdn.ons.gov.uk/assets/images/ons-logo/v2/ons-logo.svg\"\n                             alt=\"Office for National Statistics\"/>\n                        <img className=\"logo top-logo\" src={censusLogo}\n                             alt=\"Census 2021 logo\"/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"primary-nav print--hide page-title font-size--sm\">\n            </div>\n        </header>\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nexport class Footer extends React.Component {\n\n    render() {\n        return <footer className=\"footer\">\n            <img className=\"footer-license__img\" alt=\"OGL\"\n                 src=\"https://cdn.ons.gov.uk/assets/images/logo-ogl-footer.svg\"\n                 width=\"60\"></img>\n            <p className=\"footer-license__text margin-left-sm--0\">\n                All content is available under the <a className=\"icon--hide\"\n                                                      href=\"http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n                                                      target=\"_blank\"\n                                                      rel=\"noopener noreferrer\">Open Government Licence v3.0</a> <span\n                className=\"icon icon-external--light-small\"></span>, except where otherwise stated\n            </p>\n        </footer>\n    }\n}\n","import React from 'react';\nimport './App.css';\n\n\nexport class DatasetDim extends React.Component {\n\n    render() {\n        let filterSelection = \"Nothing added\";\n        if (this.props.filterSelection != null && this.props.filterSelection.length > 0) {\n            filterSelection = this.props.filterSelection.join(\", \");\n\n        }\n        return <li id=\"filter-option\"\n                   className=\"white-background margin-left-md--2 margin-right-md--2 margin-right-sm--1 margin-left-sm--1 filter-overview__add\">\n            <div className=\"col--lg-56 min-height--10 padding-left-sm--0 padding-left-md--1\">\n                <div className=\"col col--md-8 col--lg-8 min-height--4\">\n                    <a className=\"filter-overview__link--add\"\n                       href=\"#\" onClick={() => {\n                        this.props.dimClicked(true)\n                    }}><span\n                        className=\"dimension-button btn btn--tertiary margin-left-md--2 margin-left-sm--1  font-weight-700 \">Add <span\n                        className=\"visuallyhidden\">{this.props.label}</span></span></a>\n                </div>\n                <div\n                    className=\"dimension-name col col--md-11 col--lg-14 margin-left-sm--6 height-sm--3 height-md--6 overflow--hidden margin-top-md--3 margin-bottom-sm--2\">\n                    <strong><span id=\"filter-option-label\"\n                                  className=\"font-size-16\">{this.props.label}</span></strong></div>\n                <div id=\"number-added-aggregate\" className=\"col col--md-20 col--lg-30\">\n                    <div\n                        className=\"font-size--16 height-sm--3 height-md--10 nowrap-sm vertical-align-middle margin-left-sm--4 list--ellipses-sm overflow--hidden\">\n                        <div\n                            className=\"height-sm--3 max-height-md--9 vertical-align-middle__contents--md list--ellipses-md\">\n                            <ul className=\"list list--pipe-seperated list--pipe-seperated-ellipses\">\n                                <span>{filterSelection}</span>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </li>;\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nexport class DatasetFilterOptionMenu extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.applyFilters = this.applyFilters.bind(this);\n    }\n\n    applyFilters() {\n        let navTo = `${document.location.origin}/dp-census-frontend-ftb-filtering-poc/results/${this.props.datasetName}?`;\n        navTo += this.props.getFilterQuery();\n        window.location.href = navTo;\n    }\n\n    render() {\n        if (!this.props.showDim) {\n            return null;\n        }\n        let previewDownloadClass = \"btn btn--primary btn--primary-disabled btn--thick btn--wide btn--big btn--focus margin-right--2 font-weight-700 font-size--17\";\n        if (this.props.canFilter) {\n            previewDownloadClass = \"btn btn--primary btn--thick btn--wide btn--big btn--focus margin-right--2 font-weight-700 font-size--17\";\n        }\n        return (\n            <div className=\"wrapper adjust-font-size--16 page-content link-adjust background--gallery\">\n                <ul className=\"list--neutral filter-overview\">\n                    <li className=\"margin-left--0 padding-bottom--2 padding-top--0 padding-right--2 width-lg--56\">\n                        <button className=\"float-el--right-md float-el--right-sm float-el--right-lg\"\n                                href=\"/filters/c53f1a7c-ecf1-4abf-a104-f8f00cd57994/dimensions/clear-all\">Clear\n                            filters\n                        </button>\n                    </li>\n                    {this.props.dimensions}\n                </ul>\n                <div className=\"btn--no-click padding-bottom--4 padding-left--2 padding-top--2\">\n                    <div className=\"filter-overview__error-container\" id=\"error-container\"></div>\n                    <form method=\"post\" action=\"/filters/c53f1a7c-ecf1-4abf-a104-f8f00cd57994/submit\">\n                        <input id=\"preview-download\" type=\"button\" value=\"Apply filters\"\n                               className={previewDownloadClass}\n                               name=\"preview-and-download\"\n                               onClick={this.applyFilters}\n                        />\n                    </form>\n                </div>\n            </div>)\n    }\n}\n\n","import React from 'react';\nimport './App.css';\n\nexport class DimensionOptSelector extends React.Component {\n    dimCodeBook;\n    showDim;\n\n    constructor(props) {\n        super(props);\n        // this.checkChanged = this.checkChanged.bind(this);\n        this.saveSelection = this.saveSelection.bind(this);\n        this.state = {\n            filters: this.props.filters\n\n        };\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.dimCodeBook !== this.props.dimCodeBook) {\n            this.setState({filters: this.props.filters})\n        }\n    }\n\n    checkChanged(code, e) {\n        code = code.toString();\n        let filters = this.state.filters;\n        filters[code] = e.target.checked;\n        this.setState({\n            filters: filters\n        }, () => {\n            //debug function\n        });\n\n    }\n\n    saveSelection() {\n        this.props.filterUpdate(this.props.dimCodeBook.name, this.state.filters);\n        this.props.closeDimensionOptMenu();\n    }\n\n    render() {\n        if (!this.props.showDim) {\n            return null;\n        }\n        let dimensions = [];\n        for (let i = 0; i < this.props.dimCodeBook.labels.length; i++) {\n            dimensions.push(<div\n                className=\"checkbox hierarchy-box border-bottom--gallery-sm border-bottom--gallery-md margin-bottom--1 clearfix\">\n                <div className=\"width-md--25 float-el--left-md\">\n                    <input type=\"checkbox\" className=\"checkbox__input js-filter\" id={\"id\" + i}\n                           name={this.props.dimCodeBook.codes[i]}\n                           onChange={(e) => {\n                               this.checkChanged(this.props.dimCodeBook.codes[i], e)\n                           }}\n                           checked={this.state.filters[this.props.dimCodeBook.codes[i]]}\n                    />\n                    <label id={this.props.dimCodeBook.codes[i]} className=\"checkbox__label\" htmlFor={\"id\" + i}>\n                        {this.props.dimCodeBook.labels[i]}\n                    </label>\n                </div>\n            </div>)\n        }\n\n        return <div className=\"wrapper\">\n            <div className=\"col col--md-50 col--lg-35\">\n                <fieldset>\n                    <legend>\n                        <h2 className=\"font-size--17 padding-bottom--1 font-weight-700\">Browse <span\n                            className=\"visuallyhidden\">Aggregate</span></h2>\n                    </legend>\n                    <input name=\"save-and-return\" className=\"hidden\" type=\"submit\" value=\"Save and return\"/>\n                    <input className=\"btn btn--link underline-link js-filter add-all\" type=\"submit\" value=\"Add all\"\n                           name=\"add-all\" id=\"add-all\"\n                           aria-label=\"Add all Aggregate in this list to your saved items\"/>&nbsp; &nbsp;\n                    <input className=\"btn btn--link underline-link js-filter remove-list js-hidden\" type=\"submit\"\n                           value=\"Remove all\" name=\"remove-all\" id=\"remove-all\"\n                           aria-label=\"Remove all Aggregate in this list from your saved items\"/>\n                    <input name=\"q\" type=\"hidden\" value=\"/\" aria-controls=\"checkboxes-0\"/>\n                    {dimensions}\n                </fieldset>\n                <div className=\"margin-top js-hidden\">\n                    <input type=\"submit\" value=\"Add selected filters\"\n                           className=\"btn btn--secondary btn--focus font-weight-700 font-size--17 text-wrap\"/>\n                </div>\n                <div id=\"save-and-return-container\" className=\"margin-top--5\">\n                    <input name=\"save-and-return\"\n                           className=\"btn btn--primary btn--thick btn--wide btn--big btn--focus margin-right--2 font-weight-700 font-size--17 text-wrap save-button-bottom\"\n                           type=\"button\" value=\"Save and return\" onClick={this.saveSelection}/>\n                </div>\n            </div>\n        </div>\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Header\";\nimport {Footer} from \"./Footer\";\nimport {DatasetDim} from \"./DatasetDim\";\nimport {DatasetFilterOptionMenu} from \"./DatasetFilterOptionMenu\";\nimport {DimensionOptSelector} from \"./DimensionOptSelector\";\nimport MockCodeBook from \"./assets/mock_responses/MockCodeBook\";\n\n\nfunction WarningBanner(props) {\n    if (!props.warn) {\n        return null;\n    }\n    return (\n        <div className=\"warning wrapper\">\n            Connection to ONS FTB instance failed, using Mock data on the frontend instead\n        </div>\n    );\n}\n\nexport class Dataset extends React.Component {\n\n    state = {\n        name: \"\"\n    };\n\n    dimensionClickedFuncs = [];\n    ftbDomain = \"http://99.80.12.125:10100/v6\";\n\n    constructor(props) {\n        super(props);\n        this.getFilterSelection = this.getFilterSelection.bind(this);\n        this.filterUpdateFunc = this.filterUpdateFunc.bind(this);\n        this.closeDimensionOptMenu = this.closeDimensionOptMenu.bind(this);\n        this.getFilterQuery = this.getFilterQuery.bind(this);\n        this.state = {\n            filter: {},\n            ruleRootVariable: \"\"\n        }\n    }\n\n    getFilterQuery() {\n        // ruleRootVar has to be the first element in query\n        let filterQueryPart1 = `dim=${this.state.ruleRootVariable}`;\n        let filterQueryPart2 = `&incl=${this.state.ruleRootVariable},`; // Don't need to be the first item\n        for (const code in this.state.filter[this.state.ruleRootVariable]) {\n            if (this.state.filter[this.state.ruleRootVariable][code] === true) {\n                filterQueryPart2 += `${code},`;\n            }\n        }\n        // remove any trailing comma\n        filterQueryPart2 = filterQueryPart2.replace(/,\\s*$/, \"\");\n\n        for (const dim in this.state.filter) {\n            if (dim === this.state.ruleRootVariable) {\n                continue;\n            }\n            let dimOptString = \"\";\n            for (const dimOpt in this.state.filter[dim]) {\n                if (this.state.filter[dim][dimOpt] === true) {\n                    dimOptString += `${dimOpt},`;\n                }\n            }\n            if (dimOptString !== \"\") {\n                filterQueryPart1 += `&dim=${dim}`;\n                filterQueryPart2 += `&incl=${dim},${dimOptString}`;\n                // remove any trailing comma\n                filterQueryPart2 = filterQueryPart2.replace(/,\\s*$/, \"\");\n            }\n        }\n        console.log(`FILTER OUTPUT IS: ${filterQueryPart1}${filterQueryPart2}`);\n        return filterQueryPart1 + filterQueryPart2;\n    }\n\n    filterUpdateFunc(code, filter) {\n        let newFilter = {[code]: filter};\n        let filterObj = Object.assign(this.state.filter, newFilter);\n\n        this.setState({filter: filterObj})\n    }; // TODO implement filter updateFuncs - save which codes and vars selected in this state\n\n    closeDimensionOptMenu() {\n        let canFilter = false;\n        for (const dimOpt in this.state.filter[this.state.ruleRootVariable]) {\n            if (this.state.filter[this.state.ruleRootVariable][dimOpt] === true) {\n                canFilter = true;\n            }\n        }\n\n        this.setState(\n            {\n                indexAddingDimOpt: -1,\n                canFilter: canFilter\n            }\n        )\n    }\n\n    componentDidMount() {\n        const {name} = this.props.match.params;\n        this.setState({\n            \"name\": name,\n            \"codeBook\": {},\n            \"indexAddingDimOpt\": -1,\n            \"warning\": false,\n            \"filter\": {}\n        });\n        this.getCodeBook();\n    }\n\n\n    async getCodeBook() {\n        //curl -i - h Authorization: Bearer ${AUTH_TOKEN} \"http://99.80.12.125:10100/v6/codebook/Example\"\n        // Actual request\n        const requestOptions = {\n            method: 'GET',\n            Authorization: `Bearer ${process.env.REACT_APP_NOT_SECRET_CODE}`\n        };\n        let connected = false;\n        let demoResponse;\n        try {\n            const response = await fetch(this.ftbDomain + \"/codebook\" + this.props.match.params.name, requestOptions);\n            // Actual\n            demoResponse = await response.json();\n            if (response.status === 200) {\n                connected = true;\n            } else {\n                connected = false;\n            }\n        } catch {\n            connected = false;\n        }\n        if (!connected) {\n            demoResponse = MockCodeBook\n        }\n\n        if (demoResponse != null && demoResponse.codebook != null) {\n            for (let i = 0; i < demoResponse.codebook.length; i++) {\n                this.dimensionClickedFuncs.push(\n                    () => { // TODO implement closed\n                        this.setState(\n                            {indexAddingDimOpt: i} // If open then which index if closed set to -1\n                        )\n                    },\n                    // (open) => { // TODO implement closed\n                    //     this.setState(\n                    //         {indexAddingDimOpt: open ? i : -1} // If open then which index if closed set to -1\n                    //     )\n                    // },\n                );\n            }\n        }\n\n        this.setState(({\n            codeBook: demoResponse,\n            warning: !connected,\n            ruleRootVariable: demoResponse.dataset.ruleRootVariable\n        }));\n\n    }\n\n    getFilterSelection(index) {\n        let filterSelection = [];\n        if (this.state.filter[this.state.codeBook.codebook[index].name] != null) {\n            let filterName = this.state.codeBook.codebook[index].name;\n            for (const code in this.state.filter[filterName]) {\n                if (this.state.filter[filterName][code] === true) {\n                    const indexOfCode = this.state.codeBook.codebook[index].codes.indexOf(code);\n                    filterSelection.push(this.state.codeBook.codebook[index].labels[indexOfCode])\n                }\n            }\n        }\n        return filterSelection;\n    }\n\n    render() {\n        let dimensions = [];\n        let dimOptSelector;\n        if (this.state.codeBook != null && this.state.codeBook.codebook != null) {\n            let codeBook = this.state.codeBook.codebook;\n            for (let i = 0; i < codeBook.length; i++) {\n                let filterSelection = this.getFilterSelection(i);\n\n\n                let singleDim = <DatasetDim\n                    label={codeBook[i].label}\n                    dimClicked={this.dimensionClickedFuncs[i]}\n                    filterSelection={filterSelection}\n                />;\n                dimensions.push(singleDim)\n            }\n            let filtersSelected = {};\n            if (this.state.codeBook.codebook[this.state.indexAddingDimOpt] != null && this.state.filter[this.state.codeBook.codebook[this.state.indexAddingDimOpt].name] != null) {\n                filtersSelected = this.state.filter[this.state.codeBook.codebook[this.state.indexAddingDimOpt].name]\n            }\n            dimOptSelector = <DimensionOptSelector showDim={this.state.indexAddingDimOpt > -1}\n                                                   dimCodeBook={this.state.codeBook.codebook[this.state.indexAddingDimOpt]}\n                                                   filterUpdate={this.filterUpdateFunc}\n                                                   closeDimensionOptMenu={this.closeDimensionOptMenu}\n                                                   filters={filtersSelected}\n            />\n        }\n        return (\n            <div>\n                <Header/>\n                <WarningBanner warn={this.state.warning}/>\n                <h1 className=\"wrapper\">Dataset: {this.props.match.params.name}</h1>\n                <div className=\"wrapper\"> rootRuleVariable must be selected: {this.state.ruleRootVariable}</div>\n                <DatasetFilterOptionMenu\n                    datasetName={this.props.match.params.name}\n                    showDim={this.state.indexAddingDimOpt < 0}\n                    dimensions={dimensions}\n                    getFilterQuery={this.getFilterQuery}\n                    canFilter={this.state.canFilter}\n                />\n                {dimOptSelector}\n                <Footer/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport './App.css';\nimport MockDatasets from \"./assets/mock_responses/MockDatasets\";\n\nfunction WarningBanner(props) {\n    if (!props.warn) {\n        return null;\n    }\n    return (\n        <div className=\"warning wrapper\">\n            Connection to ONS FTB instance failed, using Mock data on the frontend instead\n        </div>\n    );\n}\n\nexport class Content extends React.Component {\n    // ONS instance\n    //ftbDomain = \"http://99.80.12.125:10100/v6\";\n    // Sensible code instance\n    ftbDomain = \"http://99.80.12.125:10100/v6\";\n\n    state = {\n        \"results\": [],\n        \"warning\": false\n\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"searchString\": '',\n            \"results\": [],\n            \"warning\": false\n        };\n    }\n\n    componentDidMount() {\n        this.getDatasets();\n    }\n\n    async getDatasets() {\n        // Actual request\n        const requestOptions = {\n            method: 'GET',\n            Authorization: `Bearer ${process.env.REACT_APP_NOT_SECRET_CODE}`\n        };\n        let connected = false;\n        let data;\n        try {\n            const response = await fetch(this.ftbDomain + \"/datasets\", requestOptions);\n            // Actual Response\n            data = await response.json();\n            if (response.status === 200) {\n                connected = true;\n            } else {\n                connected = false;\n            }\n\n        } catch {\n            // Fake response\n            connected = false;\n\n        }\n        if (!connected) {\n            data = MockDatasets;\n        }\n        this.setState({\n            results: data,\n            warning: !connected\n        });\n\n        return true;\n    }\n\n    render() {\n        //results = this.state.results\n\n        //For each element in results\n        // create a new component that lists the name of the result and the description\n        let displayList;\n        if (this.state.results.length > 0) {\n            displayList = this.state.results.map(function (singleResult) {\n                return <li className=\"col col--md-34 col--lg-50 search-results__item search-result-item\"><a\n                    href={document.location.href + \"/dataset/\" + singleResult.name}>{singleResult.name}</a>\n                    <p className=\"search-results__meta\">{singleResult.description}</p></li>;\n            });\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <WarningBanner warn={this.state.warning}/>\n                <h1 className=\"wrapper\">List of all datasets loaded in from FTB</h1>\n                <div className=\"search-results\">\n                    <ul className=\"list--neutral flush\">{displayList}</ul>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Header\";\nimport {Content} from \"./Content\";\nimport {Footer} from \"./Footer\";\n\n\nexport class DatasetList extends React.Component {\n\n    render() {\n        return <div>\n            <Header/>\n            <Content/>\n            <Footer/>\n        </div>\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Header\";\nimport {Footer} from \"./Footer\";\nimport MockFilterResult from \"./assets/mock_responses/MockFilterResult\";\n\nfunction WarningBanner(props) {\n    if (!props.warn) {\n        return null;\n    }\n    return (\n        <div className=\"warning wrapper\">\n            Connection to ONS FTB instance failed, using Mock data on the frontend instead\n        </div>\n    );\n}\n\nexport class Results extends React.Component {\n\n    ftbDomain = \"http://99.80.12.125:10100/v6\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: \"\",\n        };\n    }\n\n\n    componentDidMount() {\n        this.setState({});\n        this.getFilterResults();\n    }\n\n\n    async getFilterResults() {\n        //curl -i - h Authorization: Bearer ${AUTH_TOKEN} \"http://99.80.12.125:10100/v6/codebook/Example\"\n        // Actual request\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${process.env.REACT_APP_AUTH_TOKEN}`\n            }\n        };\n        let connected = false;\n        let demoResponse;\n        try {\n            const response = await fetch(`${this.ftbDomain}/query/${this.props.match.params.dataset}${window.location.search}`, requestOptions);\n            // Actual\n            demoResponse = await response.json();\n            connected = true;\n        } catch {\n            connected = false;\n            demoResponse = MockFilterResult;\n        }\n\n        this.setState(({\n            results: demoResponse,\n            warning: !connected,\n        }));\n\n    }\n\n    render() {\n        return <div>\n            <Header/>\n            <div className=\"wrapper\">\n                <WarningBanner warn={this.state.warning}/>\n                <br/>\n                <div><pre>{JSON.stringify(this.state.results, null, 2)}</pre></div>\n            </div>\n            <Footer/>\n        </div>\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Dataset} from \"./Dataset\";\nimport {DatasetList} from \"./DatasetList\";\nimport {Results} from \"./Results\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div>\n                <Switch>\n                    <Route path=\"/dp-census-frontend-ftb-filtering-poc/dataset/:name\" component={Dataset}/>\n                    <Route path=\"/dp-census-frontend-ftb-filtering-poc/results/:dataset\" component={Results}/>\n                    <Route path=\"/dp-census-frontend-ftb-filtering-poc/\" component={DatasetList} exact/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}