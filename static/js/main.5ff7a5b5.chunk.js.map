{"version":3,"sources":["assets/Census2021_whiteback.png","Header.js","Footer.js","DatasetDim.js","DatasetFilterOptionMenu.js","DimensionOptSelector.js","Dataset.js","Content.js","DatasetList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","alt","censusLogo","React","Component","Footer","width","href","target","rel","DatasetDim","props","id","onClick","dimClicked","this","label","DatasetFilterOptionMenu","showDim","dimensions","method","action","type","value","name","DimensionOptSelector","saveSelection","bind","code","e","toString","setState","checked","codeValues","property","state","push","filterUpdate","dimCodeBook","i","codes","onChange","checkChanged","htmlFor","labels","length","aria-label","aria-contols","WarningBanner","warn","Dataset","dimensionClickedFuncs","filterUpdateFunc","vars","newFilter","filterObj","Object","assign","filter","match","params","getCodeBook","requestOptions","connected","fetch","ftbDomain","response","json","demoResponse","MockCodeBook","codebook","indexAddingDimOpt","codeBook","warning","dimOptSelector","singleDim","Content","getDatasets","data","console","log","status","MockDatasets","results","displayList","map","singleResult","document","location","description","DatasetList","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5ff7a5b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Census2021_whiteback.3edebd2f.png\";","import React from 'react';\nimport censusLogo from './assets/Census2021_whiteback.png'\nimport './App.css';\n\n\nexport class Header extends React.Component {\n    render() {\n        return <header>\n            <div className=\"wrapper\">\n                <div className=\"header col-wrap\">\n                    <div className=\"col\">\n                        <img className=\"logo top-logo\"\n                             src=\"https://cdn.ons.gov.uk/assets/images/ons-logo/v2/ons-logo.svg\"\n                             alt=\"Office for National Statistics\"/>\n                        <img className=\"logo top-logo\" src={censusLogo}\n                             alt=\"Census 2021 logo\"/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"primary-nav print--hide page-title font-size--sm\">\n            </div>\n        </header>\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nexport class Footer extends React.Component {\n\n    render() {\n        return <footer className=\"footer\">\n            <img className=\"footer-license__img\" alt=\"OGL\"\n                 src=\"https://cdn.ons.gov.uk/assets/images/logo-ogl-footer.svg\"\n                 width=\"60\"></img>\n            <p className=\"footer-license__text margin-left-sm--0\">\n                All content is available under the <a className=\"icon--hide\"\n                                                      href=\"http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n                                                      target=\"_blank\"\n                                                      rel=\"noopener noreferrer\">Open Government Licence v3.0</a> <span\n                className=\"icon icon-external--light-small\"></span>, except where otherwise stated\n            </p>\n        </footer>\n    }\n}\n","import React from 'react';\nimport './App.css';\n\n\nexport class DatasetDim extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <li id=\"filter-option\"\n                   className=\"white-background margin-left-md--2 margin-right-md--2 margin-right-sm--1 margin-left-sm--1 filter-overview__add\">\n            <div className=\"col--lg-56 min-height--10 padding-left-sm--0 padding-left-md--1\">\n                <div className=\"col col--md-8 col--lg-8 min-height--4\">\n                    <a className=\"filter-overview__link--add\"\n                       href=\"#\" onClick={()=>{this.props.dimClicked(true)}}><span\n                        className=\"dimension-button btn btn--tertiary margin-left-md--2 margin-left-sm--1  font-weight-700 \">Add <span\n                        className=\"visuallyhidden\">{this.props.label}</span></span></a>\n                </div>\n                <div\n                    className=\"dimension-name col col--md-11 col--lg-14 margin-left-sm--6 height-sm--3 height-md--6 overflow--hidden margin-top-md--3 margin-bottom-sm--2\">\n                    <strong><span id=\"filter-option-label\"\n                                  className=\"font-size-16\">{this.props.label}</span></strong></div>\n                <div id=\"number-added-aggregate\" className=\"col col--md-20 col--lg-30\">\n                    <div\n                        className=\"font-size--16 height-sm--3 height-md--10 nowrap-sm vertical-align-middle margin-left-sm--4 list--ellipses-sm overflow--hidden\">\n                        <div\n                            className=\"height-sm--3 max-height-md--9 vertical-align-middle__contents--md list--ellipses-md\">\n                            <ul className=\"list list--pipe-seperated list--pipe-seperated-ellipses\">\n                                <span>Nothing added</span>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </li>;\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nexport class DatasetFilterOptionMenu extends React.Component {\n\n    render() {\n        if (!this.props.showDim) {\n            return null;\n        }\n        return (\n            <div className=\"wrapper adjust-font-size--16 page-content link-adjust background--gallery\">\n                <ul className=\"list--neutral filter-overview\">\n                    <li className=\"margin-left--0 padding-bottom--2 padding-top--0 padding-right--2 width-lg--56\">\n                        <button className=\"float-el--right-md float-el--right-sm float-el--right-lg\"\n                           href=\"/filters/c53f1a7c-ecf1-4abf-a104-f8f00cd57994/dimensions/clear-all\">Clear\n                            filters</button>\n                    </li>\n                    {this.props.dimensions}\n                </ul>\n                <div className=\"btn--no-click padding-bottom--4 padding-left--2 padding-top--2\">\n                    <div className=\"filter-overview__error-container\" id=\"error-container\"></div>\n                    <form method=\"post\" action=\"/filters/c53f1a7c-ecf1-4abf-a104-f8f00cd57994/submit\">\n                        <input id=\"preview-download\" type=\"button\" value=\"Apply filters\"\n                               className=\"btn btn--primary btn--primary-disabled btn--thick btn--wide btn--big btn--focus margin-right--2 font-weight-700 font-size--17\"\n                               name=\"preview-and-download\"\n                        />\n                    </form>\n                </div>\n            </div>)\n    }\n}\n\n","import React from 'react';\nimport './App.css';\n\nexport class DimensionOptSelector extends React.Component {\n    dimCodeBook;\n    showDim;\n\n    // TODO add all codes to state (maybe make an object in state)\n    constructor(props) {\n        super(props);\n        // this.checkChanged = this.checkChanged.bind(this);\n        this.saveSelection = this.saveSelection.bind(this);\n    }\n\n    checkChanged(code, e) {\n        code = code.toString();\n        this.setState({\n            [code]: e.target.checked\n        },);\n\n    }\n\n    saveSelection() {\n        let codeValues = [];\n        for (const property in this.state) {\n            if (property == true) {\n                codeValues.push(property)\n            }\n        }\n        this.props.filterUpdate(this.props.dimCodeBook.name, codeValues);\n    }\n\n    render() {\n        if (!this.props.showDim) {\n            return null;\n        }\n        let dimensions = [];\n        for (let i = 0; i < this.props.dimCodeBook.labels.length; i++) {\n            dimensions.push(<div\n                className=\"checkbox hierarchy-box border-bottom--gallery-sm border-bottom--gallery-md margin-bottom--1 clearfix\">\n                <div className=\"width-md--25 float-el--left-md\">\n                    <input type=\"checkbox\" className=\"checkbox__input js-filter\" id={\"id\" + i}\n                           name={this.props.dimCodeBook.codes[i]}\n                           onChange={(e) => {\n                               this.checkChanged(this.props.dimCodeBook.codes[i], e)\n                           }}/>\n                    <label id={this.props.dimCodeBook.codes[i]} className=\"checkbox__label\" htmlFor={\"id\" + i}>\n                        {this.props.dimCodeBook.labels[i]}\n                    </label>\n                </div>\n            </div>)\n        }\n\n        return <div className=\"wrapper\">\n            <div className=\"col col--md-50 col--lg-35\">\n                <fieldset>\n                    <legend>\n                        <h2 className=\"font-size--17 padding-bottom--1 font-weight-700\">Browse <span\n                            className=\"visuallyhidden\">Aggregate</span></h2>\n                    </legend>\n                    <input name=\"save-and-return\" className=\"hidden\" type=\"submit\" value=\"Save and return\"/>\n                    <input className=\"btn btn--link underline-link js-filter add-all\" type=\"submit\" value=\"Add all\"\n                           name=\"add-all\" id=\"add-all\"\n                           aria-label=\"Add all Aggregate in this list to your saved items\"/>&nbsp; &nbsp;\n                    <input className=\"btn btn--link underline-link js-filter remove-list js-hidden\" type=\"submit\"\n                           value=\"Remove all\" name=\"remove-all\" id=\"remove-all\"\n                           aria-label=\"Remove all Aggregate in this list from your saved items\"/>\n                    <input name=\"q\" type=\"hidden\" value=\"/\" aria-contols=\"checkboxes-0\"/>\n                    {dimensions}\n                </fieldset>\n                <div className=\"margin-top js-hidden\">\n                    <input type=\"submit\" value=\"Add selected filters\"\n                           className=\"btn btn--secondary btn--focus font-weight-700 font-size--17 text-wrap\"/>\n                </div>\n                <div id=\"save-and-return-container\" className=\"margin-top--5\">\n                    <input name=\"save-and-return\"\n                           className=\"btn btn--primary btn--thick btn--wide btn--big btn--focus margin-right--2 font-weight-700 font-size--17 text-wrap save-button-bottom\"\n                           type=\"button\" value=\"Save and return\" onClick={this.saveSelection}/>\n                </div>\n            </div>\n        </div>\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Header\";\nimport {Footer} from \"./Footer\";\nimport {DatasetDim} from \"./DatasetDim\";\nimport {DatasetFilterOptionMenu} from \"./DatasetFilterOptionMenu\";\nimport {DimensionOptSelector} from \"./DimensionOptSelector\";\nimport MockCodeBook from \"./assets/mock_responses/MockCodeBook\";\n\n\n// Code: [vars,vars]\nfunction WarningBanner(props) {\n    if (!props.warn) {\n        return null;\n    }\n    return (\n        <div className=\"warning wrapper\">\n            Connection to ONS FTB instance failed, using Mock data on the frontend instead\n        </div>\n    );\n}\n\nexport class Dataset extends React.Component {\n\n    state = {\n        name: \"\"\n    };\n\n    dimensionClickedFuncs = [];\n\n    constructor(props) {\n        super(props);\n        this.filterUpdateFunc = this.filterUpdateFunc.bind(this);\n    }\n\n    filterUpdateFunc(code, vars) {\n        let newFilter = {[code]: vars};\n        let filterObj = Object.assign(this.state.filter, newFilter);\n        this.setState({filter: filterObj})\n    }; // TODO implement filter updateFuncs - save which codes and vars selected in this state\n\n\n    componentDidMount() {\n        const {name} = this.props.match.params;\n        this.setState({\n            \"name\": name,\n            \"codeBook\": {},\n            \"indexAddingDimOpt\": -1,\n            \"warning\": false,\n            \"filter\": {}\n        });\n        this.getCodeBook();\n    }\n\n\n    async getCodeBook() {\n        //curl -XGET \"http://99.80.12.125:10100/v6/codebook/Example\"\n        // Actual request\n        const requestOptions = {\n            method: 'GET'\n        };\n        let connected = false;\n        let demoResponse;\n        try {\n            const response = await fetch(this.ftbDomain + \"/codebook\" + this.props.match.params.name, requestOptions);\n            // Actual Response\n            demoResponse = await response.json();\n            connected = true;\n        } catch {\n            connected = false;\n            demoResponse = MockCodeBook;\n        }\n\n        if (demoResponse != null && demoResponse.codebook != null) {\n            for (let i = 0; i < demoResponse.codebook.length; i++) {\n                this.dimensionClickedFuncs.push(\n                    () => { // TODO implement closed\n                        this.setState(\n                            {indexAddingDimOpt: i} // If open then which index if closed set to -1\n                        )\n                    },\n                    // (open) => { // TODO implement closed\n                    //     this.setState(\n                    //         {indexAddingDimOpt: open ? i : -1} // If open then which index if closed set to -1\n                    //     )\n                    // },\n                );\n            }\n        }\n\n        this.setState(({\n            codeBook: demoResponse,\n            warning: !connected\n        }));\n\n    }\n\n    render() {\n        let dimensions = [];\n        let dimOptSelector;\n        if (this.state.codeBook != null && this.state.codeBook.codebook != null) {\n            let codeBook = this.state.codeBook.codebook;\n            for (let i = 0; i < codeBook.length; i++) {\n                let singleDim = <DatasetDim label={codeBook[i].label} dimClicked={this.dimensionClickedFuncs[i]}/>;\n                dimensions.push(singleDim)\n            }\n            dimOptSelector = <DimensionOptSelector showDim={this.state.indexAddingDimOpt > -1}\n                                                   dimCodeBook={this.state.codeBook.codebook[this.state.indexAddingDimOpt]}\n                                                   filterUpdate={this.filterUpdateFunc}\n            />\n        }\n        return (\n            <div>\n                <Header/>\n                <WarningBanner warn={this.state.warning}/>\n                <h1 className=\"wrapper\">Dataset: {this.props.match.params.name}</h1>\n                <DatasetFilterOptionMenu\n                    showDim={this.state.indexAddingDimOpt < 0}\n                    dimensions={dimensions}\n                />\n                {dimOptSelector}\n                <Footer/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport './App.css';\nimport MockDatasets from \"./assets/mock_responses/MockDatasets\";\n\nfunction WarningBanner(props) {\n    if (!props.warn) {\n        return null;\n    }\n    return (\n        <div className=\"warning wrapper\">\n            Connection to ONS FTB instance failed, using Mock data on the frontend instead\n        </div>\n    );\n}\n\nexport class Content extends React.Component {\n    // ONS instance\n    //ftbDomain = \"http://99.80.12.125:10100/v6\";\n    // Sensible code instance\n    ftbDomain = \"http://99.80.12.125:10100/v6\";\n\n    state = {\n        \"results\": [],\n        \"warning\": false\n\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"searchString\": '',\n            \"results\": [],\n            \"warning\": false\n        };\n    }\n\n    componentDidMount() {\n        this.getDatasets();\n    }\n\n    async getDatasets() {\n        // Actual request\n        const requestOptions = {\n            method: 'GET'\n        };\n        let connected = false;\n        let data;\n        try {\n            const response = await fetch(this.ftbDomain + \"/datasets\", requestOptions);\n            // Actual Response\n            data = await response.json();\n            console.log(\"response.status\")\n            console.log(response.status)\n            if (response.status == 200) {\n                connected = true;\n            } else {\n                connected = false;\n            }\n\n        } catch {\n            // Fake response\n            connected = false;\n\n        }\n        if (!connected) {\n            data = MockDatasets;\n        }\n        this.setState({\n            results: data,\n            warning: !connected\n        });\n\n        return true;\n    }\n\n    render() {\n        //results = this.state.results\n\n        //For each element in results\n        // create a new component that lists the name of the result and the description\n        let displayList;\n        if (this.state.results.length > 0) {\n            displayList = this.state.results.map(function (singleResult) {\n                return <li className=\"col col--md-34 col--lg-50 search-results__item search-result-item\"><a\n                    href={document.location.href + \"/dataset/\" + singleResult.name}>{singleResult.name}</a>\n                    <p className=\"search-results__meta\">{singleResult.description}</p></li>;\n            });\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <WarningBanner warn={this.state.warning}/>\n                <h1 className=\"wrapper\">List of all datasets loaded in from FTB</h1>\n                <div className=\"search-results\">\n                    <ul className=\"list--neutral flush\">{displayList}</ul>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Header\";\nimport {Content} from \"./Content\";\nimport {Footer} from \"./Footer\";\n\n\nexport class DatasetList extends React.Component {\n\n    render() {\n        console.log(\"got in here\");\n        return <div>\n            <Header/>\n            <Content/>\n            <Footer/>\n        </div>\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Dataset} from \"./Dataset\";\nimport {DatasetList} from \"./DatasetList\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n    console.log(\"should route\");\n  return (\n      <BrowserRouter>\n          <div>\n              <Switch>\n                  <Route path=\"/dp-census-frontend-ftb-filtering-poc/dataset/:name\" component={Dataset}/>\n                  <Route path=\"/dp-census-frontend-ftb-filtering-poc/\" component={DatasetList} exact/>\n              </Switch>\n          </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}